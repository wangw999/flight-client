name: Deploy Flight client app to AMS ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  ECS_CLUSTER_NAME: ${{ secrets.ECS_CLUSTER_NAME }}
  ECS_SERVICE_NAME: ${{ secrets.ECS_SERVICE_NAME }}
  ECS_TASK_DEFINITION: ${{ secrets.ECS_TASK_DEFINITION }}
  CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  IMAGE_TAG: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Login in ECR
        run: aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build docker image
        working-directory: ./flight-client
        run: docker build -t $IMAGE_TAG .

      - name: Push Docker image to ECR
        run: docker push $IMAGE_TAG

      - name: Fill in image URI in task definition
        run: sed -i "s/placeholder-this-later/$IMAGE_TAG/" $TASK_DEFINITION_FILE

      - name: Register new task definition
        run: TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://$TASK_DEFINITION_FILE --query 'taskDefinition.taskDefinitionArn' --output text)
             echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV
    
      - name: Deploy new task definition
        run: aws ecs update-service \
            --cluster $ECS_CLUSTER_NAME \
            --service $ECS_SERVICE_NAME \
            --task-definition $TASK_DEF_ARN

            
    #   - name: Build App
    #     working-directory: ./flight-client
    #     run: pnpm run build --mode production